<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–ø–∞—Å–∏ –ë–µ–π–∫–æ–Ω–∞!</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
</head>
<body>
    <div class="glass-container">
        <div class="header">
            <h1 class="neon-text">–°–ø–∞—Å–∏ –ë–µ–π–∫–æ–Ω–∞! <span class="emoji">üòñ</span></h1>
            <div class="counter">
                <span id="currentClicks">0</span>
                <div class="divider"></div>
                <span id="maxClicks">77,777</span>
            </div>
        </div>

        <!-- –ê–≤–∞—Ç–∞—Ä–∫–∞ + —Ç–µ–∫—Å—Ç —Ä—è–¥–æ–º -->
        <div class="bacon-wrapper">
            <div class="bacon-container">
                <img src="{{ url_for('static', filename='bacon.png') }}" class="bacon-img" id="baconImg">
                <div class="particles"></div>
            </div>
            <div class="bacon-text">
                <h2>–ë–µ–π–∫–æ–Ω –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏!</h2>
                <p>–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–ø–∞—Å—Ç–∏ –µ–≥–æ, –Ω–∞–∂–∞–≤ <strong>77,777</strong> —Ä–∞–∑. –ö–∞–∂–¥—ã–π –∫–ª–∏–∫ ‚Äî —ç—Ç–æ —à–∞–≥ –∫ —Å–ø–∞—Å–µ–Ω–∏—é. –£–¥–∞—á–∏!</p>
            </div>
        </div>

        <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä -->
        <div class="progress-container">
            <div class="progress-bar" id="progressBar"></div>
            <div class="progress-text" id="progressText">0%</div>
        </div>

        <!-- –ö–Ω–æ–ø–∫–∞ -->
        <button class="neu-button" id="clickButton">
            <span class="button-text">–ö–ª–∏–∫–Ω–∏!</span>
            <div class="button-effects"></div>
        </button>
    </div>

    <!-- –ê—É–¥–∏–æ -->
    <audio id="clickSound" src="{{ url_for('static', filename='click.mp3') }}"></audio>
    <audio id="winSound" src="{{ url_for('static', filename='win.mp3') }}"></audio>

    <!-- –°–∫—Ä–∏–ø—Ç -->
    <script>
        const MAX_CLICKS = 77777;
        let lastClickTime = 0;
        let isCelebrating = false;

        const elements = {
            clickButton: document.getElementById('clickButton'),
            currentClicks: document.getElementById('currentClicks'),
            progressBar: document.getElementById('progressBar'),
            progressText: document.getElementById('progressText'),
            baconImg: document.getElementById('baconImg'),
            clickSound: document.getElementById('clickSound')
        };

        async function handleClick() {
            if (isCelebrating) return;
            const now = Date.now();
            if (now - lastClickTime < 50) return;
            lastClickTime = now;

            elements.clickSound.currentTime = 0;
            elements.clickSound.play();

            animateClick();

            try {
                const response = await fetch('/add_click', { method: 'POST' });
                const data = await response.json();
                updateUI(data);
                if (data.maxReached) startCelebration();
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞:', error);
            }
        }

        function animateClick() {
            elements.clickButton.classList.add('clicked');
            elements.baconImg.style.transform = 'scale(1.1)';
            setTimeout(() => {
                elements.clickButton.classList.remove('clicked');
                elements.baconImg.style.transform = 'scale(1)';
            }, 100);
        }

        function updateUI(data) {
            const current = data.total;
            const progress = (current / MAX_CLICKS * 100).toFixed(1);
            elements.currentClicks.textContent = current.toLocaleString();
            elements.progressBar.style.width = `${progress}%`;
            elements.progressText.textContent = `${progress}%`;

            const hue = (progress * 1.2).toFixed(0);
            elements.progressBar.style.background = `linear-gradient(90deg, 
                hsl(${hue}, 100%, 50%), 
                hsl(${+hue + 20}, 100%, 50%))`;
        }

        function startCelebration() {
            if (isCelebrating) return;
            isCelebrating = true;
            document.body.classList.add('celebrate');
            elements.baconImg.classList.add('animate__tada');

            const winSound = document.getElementById('winSound');
            winSound.play();
            createConfettiStorm();
        }

        function createConfettiStorm() {
            const container = document.querySelector('.particles');
            for(let i = 0; i < 150; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.cssText = `
                    --x: ${Math.random() * 100}%;
                    --delay: ${Math.random() * 2}s;
                    --hue: ${Math.random() * 360};
                    --speed: ${Math.random() * 3 + 2}s;
                `;
                container.appendChild(confetti);
            }
        }

        elements.clickButton.addEventListener('click', handleClick);
        fetch('/get_clicks')
            .then(r => r.json())
            .then(updateUI);
    </script>
</body>
</html>
